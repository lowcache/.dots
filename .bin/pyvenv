#!/usr/bin/env bash

# Set the default Python version if none is provided
PYTHON_VERSION=${PYTHON_VERSION:-3.1}

# Determine the Python 3 version to use
if [[ "$PYTHON_VERSION" == "3.1" ]]; then
  PYTHON_COMMAND="python3"
else
  PYTHON_COMMAND="python3" # This is just a placeholder.  We'll use the actual command later
end

# Check if virtualenv is installed
if ! command -v virtualenv &> /dev/null; then
  echo "virtualenv not found.  Installing..."

  # Attempt to install virtualenv using pip
  if ! pip3 install --upgrade virtualenv &> /dev/null; then
    echo "Error installing virtualenv.  Please ensure pip is installed and configured correctly."
    exit 1
  fi
else
  echo "virtualenv already installed."
fi


# Set the Python executable path
PYTHON_EXECUTABLE=$(which "$PYTHON_EXECUTABLE")

if [ -z "$PYTHON_EXECUTABLE" ]; then
  echo "Error: Could not find Python executable.  Please ensure Python is installed and in your PATH."
  exit 1
fi

# Create the virtual environment
echo "Creating virtual environment '$PYTHON_VERSION'..."
virtualenv -p "$PYTHON_EXECUTABLE" "$PYTHON_VERSION"

if [ $? -ne 0 ]; then
  echo "Error creating virtual environment.  Exiting."
  exit 1
fi

# Activate the virtual environment
echo "Activating virtual environment '$PYTHON_VERSION'..."
source "$PYTHON_EXECUTABLE/bin/activate"

# You can now work with the virtual environment

# Example: Install a package
# pip install requests

echo "Virtual environment '$PYTHON_VERSION' created and activated successfully!"
echo "To deactivate the virtual environment, run: deactivate"

exit 0
